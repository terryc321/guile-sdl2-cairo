
// --- ONE-TIME SETUP (same as before) ---
SDL_Surface *sdl_surface = SDL_CreateRGBSurface(0, WIDTH, HEIGHT, 32,
    0x00FF0000, 0x0000FF00, 0x000000FF, 0xFF000000);

cairo_surface_t *cairo_surface = cairo_image_surface_create_for_data(
    (unsigned char*)sdl_surface->pixels,
    CAIRO_FORMAT_ARGB32, WIDTH, HEIGHT, sdl_surface->pitch);

cairo_t *cr = cairo_create(cairo_surface);

SDL_Texture *texture = SDL_CreateTexture(renderer,
    SDL_PIXELFORMAT_ARGB8888, SDL_TEXTUREACCESS_STREAMING, WIDTH, HEIGHT);

// --- GAME LOOP ---
while (running) {
    // === 1. Draw with SDL2 renderer (GPU) ===
    SDL_SetRenderDrawColor(renderer, 30, 30, 40, 255);  // dark background
    SDL_RenderClear(renderer);

    // Draw UI panel (filled rect) â€” super fast!
    SDL_Rect panel = { 50, 50, 200, 100 };
    SDL_SetRenderDrawColor(renderer, 0, 120, 255, 255);
    SDL_RenderFillRect(renderer, &panel);

    // Draw health bar outline
    SDL_SetRenderDrawColor(renderer, 255, 255, 255, 255);
    SDL_RenderDrawRect(renderer, &panel);

    // === 2. Draw complex stuff with Cairo (on CPU surface) ===
    // Clear Cairo surface with transparent or background
    cairo_set_source_rgba(cr, 0, 0, 0, 0);  // transparent
    cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
    cairo_paint(cr);

    // Draw a fancy arc gauge
    double xc = 320, yc = 240, radius = 100;
    double angle = player_health * 2 * M_PI / 100.0;

    cairo_set_source_rgb(cr, 0.2, 0.8, 0.2);
    cairo_set_line_width(cr, 12);
    cairo_arc(cr, xc, yc, radius, 0, angle);
    cairo_stroke(cr);

    // === 3. Upload Cairo drawing to GPU ===
    cairo_surface_flush(cairo_surface);
    SDL_UpdateTexture(texture, NULL, sdl_surface->pixels, sdl_surface->pitch);

    // === 4. Render Cairo result on top of SDL drawing ===
    SDL_RenderCopy(renderer, texture, NULL, NULL);

    // === 5. Present ===
    SDL_RenderPresent(renderer);
}
